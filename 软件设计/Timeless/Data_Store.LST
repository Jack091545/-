C51 COMPILER V9.01   DATA_STORE                                                            06/19/2016 20:45:01 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE DATA_STORE
OBJECT MODULE PLACED IN Data_Store.OBJ
COMPILER INVOKED BY: D:\software\KEILC51\C51\BIN\C51.EXE Data_Store.c LARGE BROWSE DEFINE(__WEI__) DEBUG OBJECTEXTEND

line level    source

   1          #include "stc12c5a60s2.h"
   2          #include "Data_Store.h"
   3          #include "UART.h"
   4          #include <intrins.h>
   5          #include <stdio.h>
   6          
   7          
   8          #define CMD_IDLE 0
   9          #define CMD_READ 1
  10          #define CMD_PROGRAM 2
  11          #define CMD_ERASE 3
  12          
  13          #define ENABLE_IAP 0x83
  14          
  15          #define IAP_ADDRESS_SEC1 0x0000  /* STC12C5A60S2总共只有两个扇区，大小1k        */
  16          #define IAP_ADDRESS_SEC2 0x0200  /* 每个扇区512个字节 */
  17          
  18          struct Private_Data
  19          {
  20                  unsigned char Account[20];
  21                  unsigned char Passwd[20]; 
  22          };
  23          
  24          static unsigned char Boot_Flag = 0;
  25          
  26          
  27          void Delay(unsigned char n)
  28          {
  29   1              unsigned int x;
  30   1              while(n--)
  31   1              {
  32   2                      x = 0;
  33   2                      while(++x);
  34   2              }
  35   1      }
  36          
  37          /*
  38           * 扇区擦写读操作初始化
  39           */
  40          void IAP_Idle(void)
  41          {
  42   1              IAP_CONTR = 0;
  43   1              IAP_CMD = 0;
  44   1              IAP_TRIG = 0;
  45   1              IAP_ADDRH = 0x80;
  46   1              IAP_ADDRL = 0x00;
  47   1      }
  48          
  49          
  50          /*
  51           * 扇区读，地址addr 0x0000-0x03FF，返回数据0x00-0xFF
  52           */
  53          unsigned char IAP_ReadByte(unsigned int addr)
  54          {
  55   1              unsigned char dat;
C51 COMPILER V9.01   DATA_STORE                                                            06/19/2016 20:45:01 PAGE 2   

  56   1      
  57   1              IAP_CONTR = ENABLE_IAP;
  58   1              IAP_CMD = CMD_READ;
  59   1              IAP_ADDRL = addr;
  60   1              IAP_ADDRH = addr >> 8;
  61   1              IAP_TRIG = 0x5A;
  62   1              IAP_TRIG = 0XA5;
  63   1              _nop_();
  64   1      
  65   1              dat = IAP_DATA;
  66   1              IAP_Idle();
  67   1      
  68   1              return dat;
  69   1      }
  70          
  71          /*
  72           * 扇区写，地址addr 0x0000-0x03FF，数据0x00-0xFF
  73           */
  74          void IAP_ProgramByte(unsigned int addr,unsigned char dat)
  75          {
  76   1              IAP_CONTR = ENABLE_IAP;
  77   1              IAP_CMD = CMD_PROGRAM;
  78   1              IAP_ADDRL = addr;
  79   1              IAP_ADDRH = addr >> 8;
  80   1              IAP_DATA = dat;
  81   1              IAP_TRIG = 0x5A;
  82   1              IAP_TRIG = 0XA5;
  83   1              _nop_();
  84   1      
  85   1      
  86   1              IAP_Idle();     
  87   1      }
  88          
  89          
  90          /*
  91           * 扇区擦除，地址addr 0x0000-0x03FF
  92           */
  93          void IAP_EraseSector(unsigned int addr)
  94          {
  95   1              IAP_CONTR = ENABLE_IAP;
  96   1              IAP_CMD = CMD_ERASE;
  97   1              IAP_ADDRL = addr;
  98   1              IAP_ADDRH = addr >> 8;
  99   1              IAP_TRIG = 0x5A;
 100   1              IAP_TRIG = 0XA5;
 101   1              _nop_();
 102   1      
 103   1              IAP_Idle();             
 104   1      }
 105          
 106          /*
 107           * 获取启动标志
 108           */
 109          unsigned char Get_Boot_Flag(void)
 110          {
 111   1              return Boot_Flag;
 112   1      }
 113          
 114          /*
 115           * 获取剩余天数
 116           */
 117          unsigned int Get_Timeless(void)
C51 COMPILER V9.01   DATA_STORE                                                            06/19/2016 20:45:01 PAGE 3   

 118          {
 119   1              return (IAP_ReadByte(IAP_ADDRESS_SEC1+2)<<8)|(IAP_ReadByte(IAP_ADDRESS_SEC1+3)) ;
 120   1      }
 121          
 122          
 123          /*
 124           * 写入启动标志和剩余天数
 125           */
 126          void Set_Timeless(unsigned int data_Time)
 127          {
 128   1              IAP_EraseSector(IAP_ADDRESS_SEC1); //擦除扇区1
 129   1              Delay(10);
 130   1      
 131   1              IAP_ProgramByte(IAP_ADDRESS_SEC1,0x55);
 132   1              IAP_ProgramByte(IAP_ADDRESS_SEC1+1,0xAA);
 133   1      
 134   1      
 135   1              IAP_ProgramByte(IAP_ADDRESS_SEC1+2,data_Time>>8);
 136   1              IAP_ProgramByte(IAP_ADDRESS_SEC1+3,(data_Time&0x00ff));         
 137   1      }
 138          
 139          
 140          /*
 141           * EEPROM读写任务
 142           */
 143          void IAP_Task(void)
 144          {
 145   1      
 146   1      #ifdef __DEBUG__
              
              #ifdef __WEI__  /* 定义了__DEBUG__，又定义__WEI__ */
                      IAP_EraseSector(IAP_ADDRESS_SEC1); /*擦除扇区1.2        */
                      Delay(10);
                      IAP_EraseSector(IAP_ADDRESS_SEC2); 
                      Delay(10);
                      IAP_ProgramByte(IAP_ADDRESS_SEC1,0x55);                   /* 写入启动标志 */
                      IAP_ProgramByte(IAP_ADDRESS_SEC1+1,0xAA);
              
                      IAP_ProgramByte(IAP_ADDRESS_SEC1+2,0x07);               /* 写入Timeless */
                      IAP_ProgramByte(IAP_ADDRESS_SEC1+3,0xC4);
                      Delay(10);
                      SendByte_UART(IAP_ReadByte(IAP_ADDRESS_SEC1+2));
                      SendByte_UART(IAP_ReadByte(IAP_ADDRESS_SEC1+3));
                      SendByte_UART(IAP_ReadByte(IAP_ADDRESS_SEC1+2));
                      SendByte_UART(IAP_ReadByte(IAP_ADDRESS_SEC1+3));
              #else      /* 定义了__DEBUG__，但没有定义__WEI__ */
                      IAP_EraseSector(IAP_ADDRESS_SEC1);        /* 擦除扇区 */
                      Delay(10);
                      IAP_EraseSector(IAP_ADDRESS_SEC2); 
                      Delay(10);
                      IAP_ProgramByte(IAP_ADDRESS_SEC1,0x55);  /* 写入启动标志 */
                      IAP_ProgramByte(IAP_ADDRESS_SEC1+1,0xAA);
                      Delay(10);
              #endif
              
              #endif
 174   1      
 175   1              if((IAP_ReadByte(IAP_ADDRESS_SEC1)!= 0x55) || (IAP_ReadByte(IAP_ADDRESS_SEC1+1) != 0xAA))         /* 如果不是有
             -效的，那么就擦除EEPROM上所有的数据，以防盗窃    */
 176   1              {
 177   2                      IAP_EraseSector(IAP_ADDRESS_SEC1); 
 178   2                      IAP_EraseSector(IAP_ADDRESS_SEC2); 
C51 COMPILER V9.01   DATA_STORE                                                            06/19/2016 20:45:01 PAGE 4   

 179   2                      Boot_Flag = 0;          
 180   2              }
 181   1              else /*是有效的启动标志  */
 182   1              {
 183   2                      Boot_Flag = 1;
 184   2              }
 185   1      }
 186          
 187          
 188          
 189          
 190          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    215    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =      1    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
